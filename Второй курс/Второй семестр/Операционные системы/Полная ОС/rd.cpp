//удаление каталога
#include <cstdlib> 
#include <unistd.h> 
#include <iostream> 
#include <sys/types.h> 
#include <dirent.h> 
#include <errno.h> 
#include <string.h> 
#include "err1.h"
#include "rd.h"

using namespace std;

void deldir(char *path){
//Тут происходит инициализация каталога. Он открывается, проверяется успешность попытки его открытия, текущий каталог меняется на данный.Функция chdir() устанавливает в качестве текущего каталог, на который указывает параметр path. 
	DIR *dir;
	int u;
	struct dirent *sdir;
	dir = opendir(path);
	if(dir == NULL) 
		err1();
	chdir(path);
//Здесь происходит рекурсивное удаление каталога. Операторы будут выполняться, пока не будет достигнут конец каталога. 
	while((sdir = readdir(dir)) != NULL) //Функция readdir() возвращает название следующего файла в каталоге.То есть функ­ция readdir() читает оглавление каталога по одному файлу за раз
	{ 
		u = unlink(sdir->d_name); //Попытка удаления(unlink удаляет ссылки на файл, а уже потом освобождается дисковое пространство) 
		if(u == -1 && errno == EISDIR){
			if(strcmp(".", sdir->d_name) == 0 || strcmp("..", sdir->d_name) 
== 0) //Функция strcmp сравнивает символы двух строк, string1 и string2. Начиная с первых символов функция strcmp сравнивает поочередно каждую пару символов, и продолжается это до тех пор, пока не будут найдены различные символы или не будет достигнут конец строки. Если наша попытка не удалась (то есть функция unlink вернула значение -1) и при этом последняя ошибка «EISDIR» (то есть «Это каталог»), то проверяем не является ли имя «.» или «..»(родительский и текущий каталоги).Если имена совпали, то мы переходим на следующий итерационный шаг 
				continue; //Прерывает текущую итерацию цикла и приступает к следующей итерации
			deldir(sdir->d_name); //Рекурсивный вызов заключается в том, что функция deldir вызывает саму себя до тех пор, пока программа не откроет такой каталог, который не содержит иных каталогов. Заново входим в наш модуль (здесь и появляется рекурсия) передавая имя текущего каталога. При этом программа осуществляет удаление всех файлов в этом каталоге, выходит из этого каталога и удаляет его 
		} 
//Если же попытка удаления не успешна и при этом ошибка не «EISDIR» то выводим ошибку. 
		if(u == -1 && errno == !EISDIR)
			err1();
	} 
//Здесь же происходит закрытие каталога, переход в родительский каталог, удаление каталога,Функция Rmdir удаляет директорию с именем path
	closedir(dir);
	chdir("..");
	if(rmdir(path) == -1) 
		err1();
}
